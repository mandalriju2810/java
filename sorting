
: if arr[j] > arr[j+1] swap them. To place the element in their respective position, we have to do the following operation N-1 times. 
Time Complexity: O(N2)


//bubble sort algorithm

for(int i=0;i<arr.length-1;i++){
for(int j=0;j<arr.length-1-i;j++){
        if(arr[j]>arr[j+1]){
       int temp=arr[j];
       arr[j]=arr[j+1];
       arr[j+1]=temp;
        }
      }
 }   

// code for soroting in bublle sort 

public class Main
{
    public static void printArray(int arr[]){
        
        for(int i=0;i<arr.length;i++){
            System.out.println(arr[i]+"");
        }
    }
	public static void main(String[] args) {
	    int arr[]={7,5,3,1,2};
	    for(int i=0;i<arr.length-1;i++){
	        for(int j=0;j<arr.length-i-1;j++){
	            if(arr[j]>arr[j+1]){
	                
	                int temp= arr[j];
	                arr[j]=arr[j+1];
	                arr[j+1]=temp;
	            }
	            
	        }
	    }
	    printArray(arr);
		
	}
}



//selection sort


 for (int i = 0; i < arr.length - 1; i++) {
            int smallest = i;
            for (int j = i + 1; j < arr.length; j++) {
                if (arr[j] < arr[smallest]) {
                    smallest = j;
                }
            }
            int temp = arr[smallest];
            arr[smallest] = arr[i];
            arr[i] = temp;
        }

// code

public class Main {
    public static void printArray(int arr[]) {
        for (int i = 0; i < arr.length; i++) {
            System.out.print(arr[i] + " ");
        }
        System.out.println();
    }

    public static void main(String[] args) {
        int arr[] = { 7, 5, 3, 1, 2 };
        for (int i = 0; i < arr.length - 1; i++) {
            int smallest = i;
            for (int j = i + 1; j < arr.length; j++) {
                if (arr[j] < arr[smallest]) {
                    smallest = j;
                }
            }
            int temp = arr[smallest];
            arr[smallest] = arr[i];
            arr[i] = temp;
        }
        printArray(arr);
    }
}



